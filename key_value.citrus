
grammar KeyValue

  rule option
    (key space? '=' space? val) { { key.value => val.value } }
  end

  rule space
    [\s]+
  end

  rule key
    ([a-zA-Z] [a-zA-Z0-9_]+) { to_sym }
  end

  rule val
    float | integer | str:string
  end

  rule integer
    (sign ([1-9] [0-9]*) | '0') { to_i }
  end

  rule float
    (integer '.' [0-9]+) { to_f }
  end

  rule sign
    ('+' | '-')?
  end

  rule string
    str:('"' (!'"' .)+ '"') { eval str }
  end
end
